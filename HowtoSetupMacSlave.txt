How to setup mac slave
1.	Create Jenkins account
Go to “System Preferences” -> “Users&Groups”, click “+” in left panel to create jenkins admin user

2.	Enable remote desktop and remote login
Go to “System Preferences” -> “Sharing”, check “Screen Sharing” and “Remote Login”

3.	Set automatic login and allow app downloaded from anywhere
Go to “System Preferences” -> “Security&Privacy”, uncheck “Disable automatic login” and “Require a password after sleep…” and check “Anywhere”

4.	Download and install xcode 6.1 and 5.1 from https://developer.apple.com/downloads/index.action?name=Xcode
Make sure command line tools are installed as well

5.	Config android development environment
•	Download and install java jdk from http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
•	Download and install android studio http://developer.android.com/sdk/index.html
•	Open android studio to install any necessary SDK tools. If “Android Studio was unable to find valid JVM”, open android info.plist and change “JVMVersion” from 1.6* to 1.6+
•	Download and install Android NDK from https://developer.android.com/tools/sdk/ndk/index.html, change mode as a+w and extract
•	Add ANDROID_HOME, ANDROID_NDK_HOME, ANDROID_NDK into environment, like
export PATH=$PATH:/Applications/sdk/platform-tools
export PATH=$PATH:/Applications/android-ndk-r9d
export ANDROID_HOME=/Applications/sdk
export ANDROID_NDK_HOME=/Applications/android-ndk-r9d
export ANDROID_NDK=$ANDROID_NDK_HOME

6.	Install Homebrew and RVM
•	Download and install home brew with
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
•	If no developer tool installed, xcode-selete –install
•	Download and install rvm with 
\curl -L https://get.rvm.io | bash -s stable --rails --autolibs=enabled
•	Get stable ruby version, 2.1.2 as required ruby version and run `rvm –default use 2.1.2` to keep 2.1.2 as default
•	Create gemset calabash `rvm gemset create calabash`, `rvm gemset use calabash`
•	cd wme/ta, run `bundle install` to install all necessary gem files
•	git clone git@sqbu-github.cisco.com:qianden/wme-jenkins.git and copy scripts/junit.rb and rerun.rb to /Users/jenkins/.rvm/gems/ruby-2.1.2@calabash/gems/cucumber-1.3.18/lib/cucumber/formatter or run `gem which cucumber` to find out gem location
•	gem install erubis

7.	Setup Jenkins slave environment
•	Create a new slave node on master and connect it
•	Upload machine ssh public key to git server, `pbcopy < ~/.ssh/id_rsa.pub`
•	
•	Copy machine ssh public key to master
ssh-keygen -t rsa
cat .ssh/id_rsa.pub | ssh jenkins@10.35.132.106 'cat >> .ssh/authorized_keys'
•	Brew install cmake, add  :q! into bash_profile
•	Brew install maven, and set JAVA_HOME as environment variable and add maven into bash_profile as well; example
export JAVA_HOME=$(/usr/libexec/java_home)
export M2_HOME=/usr/local/Cellar/maven/3.2.5
export M2=$M2_HOME/bin
export PATH=$M2:$PATH
•	Brew install ant and add it into environment, example
export ANT=/usr/local/Cellar/ant/1.9.4
export PATH=$ANT:$PATH
•	Brew install nasm, ln –s /usr/local/bin/nasm /usr/bin/nasm

8.	Setup debug environment
•	Clone debug tool under Jenkins_Home/Workspace/build-all/, `git clone git@sqbu-github.cisco.com:WebExSquared/debug-tools.git`
•	Setup debug tool python env
Pip install python-dateutil, numpy, pymatlab, scipy, matplotlib, docutils, sphinx, treelib

9.	Setup ios dev environment
•	Git clone git@sqbu-github.cisco.com:qianden/wme-jenkins.git
•	Add wme-jenkins.gen-Certificates.p12 into keychain, pass: wme123PASS
•	Add mobileprovision to connected devices
•	Go to keychain access, click private key of wme-jenkins.gen dev cert, change access control as “allow all application to access this item”

10.	Install ios-deploy
https://github.com/phonegap/ios-deploy
•	brew install node
•	npm install -g ios-deploy
