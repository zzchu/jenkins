How to setup windows slave
1.	Set “never go to sleep” and “never turn off display”, 
	Go to control panel -> Power options

2.	Set log on without password,
http://www.7tutorials.com/log-automatically-windows-7-without-typing-your-password
In command prompt, run netplwiz.exe and uncheck “Users must enter a username …”

3.	Install Git and configure SSH key
http://guides.beanstalkapp.com/version-control/git-on-windows.html
•	Download from http://msysgit.github.io/ and install
•	Set HOME for cmd, add “HOME=%USERPROFILE%” into environmental variables
•	Generate and add SSH keys, use “ssh-keygen -t rsa” to generate key and add rsa.pub into GitHub account settings

4.	Set up ssh server
http://www.techrepublic.com/blog/tr-dojo/set-up-a-free-ssh-server-on-windows-7-with-freesshd/
•	Download freeSSHd from http://www.freesshd.com/?ctt=download and install
•	Start SSH service
•	Add jenkins user and choose “Public key(SSH only)” as authorization method; copy public key from jenkins master to C:\Program Files (x86)\freeSSHd and rename it as jenkins
•	Press window+R to run “%APPDATA%” and copy FreeSSHd shortcut to Microsoft\Windows\Start Menu\Programs\Startup in order to start FreeSSHd when windows start

5.	VS
•	Download visual studio 2013 express for windows from http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx
•	Download visual studio 2013 express for desktop and install 
•	Download nasm from http://www.nasm.us/pub/nasm/releasebuilds/2.11.06/win32/ and install, add nasm to system environment
•	Download visual studio 2008 from http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs.aspx and install
•	Download afxres.h from http://sourceforge.net/p/mingw/mingw-org-wsl/ci/21762bb4a1bd0c88c38eead03f59e8d994349e83/tree/include/afxres.h, remove line27 #include <_mingw.h> and put into C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include

6.	Setup android development environment
•	Download jdk/jre from http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html and install; add JAVA_HOME to user env
•	Download Android sdk and ndk, run SDK manager to install other tools and API
•	add path to user environment variables, examples, 
set PATH=%PATH%;C:\Android\adt-bundle-windows-x86_64-20140702\sdk\platform-tools
set PATH=%PATH%;C:\Android\android-ndk-r10
set PATH=%PATH%;C:\Android\adt-bundle-windows-x86_64-20140702\sdk\tools
set ANDROID_HOME=C:\Android\adt-bundle-windows-x86_64-20140702\sdk
set ANDROID_NDK_HOME=C:\Android\android-ndk-r10
set ANDROID_NDK=C:\Android\android-ndk-r10
•	Download and install ant follow http://dita-ot.sourceforge.net/doc/ot-userguide13/xhtml/installing/windows_installingant.html

7.	Ruby and WME TA env
http://socrateos.blogspot.com/2014/04/installing-ruby-193-on-my-windows-81.html
•	Download 1.9.3 RubyInstaller (recommended as stable version) from http://rubyinstaller.org/downloads/ and install; remember to add ruby to system env, like C:\Ruby193\bin
•	Download devkit for 1.9.3 from http://rubyinstaller.org/downloads/ and install
•	Download rubygems from https://rubygems.org/pages/download and install; ruby gems 2.4.2 is not compatible with native gem build, run `gem update --system 2.3.0` to downgrade 

8.	Python and debug tool environment
•	Download python2.7 and python 3.4 from https://www.python.org/downloads/ and install in order to use 2.7 as default and trigger python with py
•	Add C:\Python27\Scripts and C:\Python27 to environment variables
•	Setup debug tool py env
•	Download VS python develop tool from http://www.microsoft.com/en-us/download/details.aspx?id=44266 and install 
•	pip install python-dateutil
•	pip install numpy; if cannot work,download numpy from http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy, get win32 version
•	download pymatlab from http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymatlab
•	download scipy from http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy, get win32 version
•	pip install matplotlib, docutils, sphinx, treelib
•	write py.bat to start python.exe for windows 'start "C:\Python27" python.exe' and put it under C:\Python27

9.	Configure Jenkins Slave node
•	Remember to add git path under tool chain
•	Set usage as used by tied jobs only
•	Recommand to use "Java Web Start" to launch windows slave
•	Add environment pair under “Node Properties”, HOME=C:\Users\testbed

10.	Setup TA env
•	git clone git@sqbu-github.cisco.com:qianden/wme-jenkins.git under C:\Users\testbed\Jenkins_Workspace
•	cd C:\Users\testbed\Jenkins_Workspace\build-all\wme-gitx\ta and run `bundle install`
•	Use `gem which cucumber` to find cucumber install location and copy wme-jenkins\script\junit.rb and rerun.rb to cucumber formatter folder, like C:\Ruby193\lib\ruby\gems\1.9.1\gems\cucumber-1.3.18\lib\cucumber\formatter
•	Download 7z from http://www.7-zip.org/download.html and install; add 7z path to system env
•	gem install erubis

11.     Start windows slave when start
https://wiki.jenkins-ci.org/display/JENKINS/Launch+Java+Web+Start+slave+agent+via+Windows+Scheduler

12.     Enable windows camera cmd check
•	Download and install Windows kits tool from http://www.microsoft.com/en-us/download/details.aspx?id=42273
•	Add C:\Program Files (x86)\Windows Kits\8.1\Tools\x64 into User env variable
•	Restart Jenkins slave agent to reload env variable

